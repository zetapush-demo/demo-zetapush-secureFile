{"_type":"macro","description":"<p>\n\tRequest the gda service list with optional pagination.\n\tIf pagination is provided, it will determine if there is another available page.\n\t</p>\n\t\n\tThe response must be unwrapped:\n\t<ul>\n\t<li>call response.result.response.result to get the stack result</li>\n\t<li>call response.result.response.request to get original stack request</li>\n\t<li>call response.result.response.result.content to get stack list</li>\n\t<li>call response.result.response.result.page to get result pagination</li>\n\t</ul>\n\t\n\tThe result pagination object will have the following properties:\n\t<ul>\n\t<li>{pageSize}: the result page size (like usually) </li>\n\t<li>{pageNumber}: the result page number (like usually) </li>\n\t<li>{direction}: the result order direction (like usually) </li>\n\t<li><b>{hasNext}</b>: true to indicate if there is one more page available, false otherwise</li>\n\t</ul>\n\t\n\t<p>\n\tIf no pagination is provided, all the elements are loaded so {hasNext} is always false.\n\t</p>\n\t\n\tExemple of use:\n\t<pre>\n\t\tvar response = call zpRecipeUtils::paginatedGdaList({\n\t\t\tgdaService: zpServiceGda,\n\t\t\ttable: 'foo',\n\t\t\towner: 'toto',\n\t\t\tpage: { pageSize: 20, pageNumber: 0 }\n\t\t}) hardFail;\n\t\t// unwrap the response\n\t\tvar unwrappedResponse = response.result;\n\t\tfor item in unwrappedResponse.result.content {\n\t\t\ttrace(item);\n\t\t}\n\t\tvar hasNextPage = unwrappedResponse.result.page.hasNext;\n\t</pre>","line":86,"steps":[{"_type":"call","description":" Call api gda.list","line":151,"deploymentId":"ref://gdaService","verb":"list","parameter":{"table":{"__ref":"${table}"},"columns":{"__ref":"${columns}"},"owner":{"__ref":"${owner}"},"page":{"__ref":"${page}"}},"resultName":"response"},{"_type":"var","description":" hasNextPage =","line":152,"var":"hasNextPage","value":false},{"_type":"test","description":" if","line":153,"steps":[{"_type":"test","description":" if","line":158,"steps":[{"_type":"call","description":" Call api gda.list","line":160,"deploymentId":"ref://gdaService","verb":"list","parameter":{"table":{"__ref":"${table}"},"columns":{"__ref":"${columns}"},"owner":{"__ref":"${owner}"},"page":{"__ref":"${usr:computePageForHasNext('computePageForHasNext',page)}"}},"resultName":"moreResponse"},{"_type":"var","description":" hasNextPage =","line":161,"var":"hasNextPage","value":{"__ref":"${(coll:size(moreResponse.result.content) > 0)}"}}],"condition":"${(coll:size(response.result.content) >= page.pageSize)}"}],"condition":"${(page != null)}"},{"_type":"var","description":"Destructure result properties","line":165,"var":"request","value":{"__ref":"${response.request}"}},{"_type":"var","description":" result =","line":166,"var":"result","value":{"__ref":"${usr:formatPaginatedResult('formatPaginatedResult',response.result,hasNextPage)}"}}],"name":"paginatedGdaList","channel":"paginatedGdaList","result":{"request":{"__ref":"${request}"},"result":{"__ref":"${result}"}},"source":"com.zetapush.core.utils|2.0.0:src/api/utils/pagination.zms","params":[{"name":"gdaService","constraints":[{"name":"service","config":{"service":"gda"}}]},{"name":"table","constraints":[{"name":"type","config":{"type":"string"}}]},{"name":"columns","constraints":[{"name":"type","config":{"type":"object"}},{"name":"__default","config":{"__default":null}}]},{"name":"owner","constraints":[{"name":"type","config":{"type":"string"}},{"name":"__default","config":{"__default":null}}]},{"name":"page","constraints":[{"name":"type","config":{"type":"object"}},{"name":"__default","config":{"__default":null}}]}],"broadcast":true}